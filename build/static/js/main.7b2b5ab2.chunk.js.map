{"version":3,"sources":["Header.js","Chat.js","Chats.js","ChatScreen.js","axios.js","SwipeButtons.js","BarkerCards.js","App.js","reportWebVitals.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","replace","fontSize","to","src","alt","Chat","name","message","profilePic","timestamp","Avatar","Chats","ChatScreen","useState","input","setInput","image","messages","setMessages","map","value","onChange","e","target","type","placeholder","preventDefault","instance","axios","create","baseURL","SwipeButtons","redHeartPressed","greenHeartPressed","alreadyRemoved","BarkerCards","people","setPeople","useEffect","a","get","req","data","length","fetchData","swiped","direction","console","log","push","clonedPeople","filter","person","includes","outOfFrame","preventSwipe","onSwipe","dir","onCardLeftScreen","style","backgroundImage","imgUrl","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b2b5ab2.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Header.css\";\r\nimport PetsIcon from \"@material-ui/icons/Pets\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Header({ backButton }) {\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"header\">\r\n            {backButton ? (\r\n            <IconButton onClick={() => history.replace(backButton)}>\r\n                <ArrowBackIosIcon fontSize=\"large\" className=\"header__icon\" />\r\n            </IconButton>\r\n            ): (\r\n            <IconButton>\r\n                <PetsIcon fontSize=\"large\" className=\"header__icon\" />\r\n            </IconButton> \r\n            )}\r\n\r\n            <Link to=\"/\">\r\n            <IconButton>\r\n            <img\r\n                className=\"header__logo\"\r\n                src=\"https://image.shutterstock.com/shutterstock/photos/469733438/display_1500/stock-vector-dog-logo-icon-469733438.jpg\"\r\n                alt=\"barker logo\"\r\n            />\r\n            </IconButton>\r\n            </Link>\r\n\r\n            <Link to=\"/chat\">\r\n            <IconButton>\r\n            <ForumIcon fontSize=\"large\" className=\"header__icon\"/>\r\n            </IconButton>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport './Chat.css';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Chat({ name, message, profilePic, timestamp }) {\r\n    return (\r\n    <Link to={`/chat/${name}`}>\r\n    <div className=\"chat\">\r\n        <Avatar className=\"chat__image\" alt={ name } src={ profilePic } />\r\n        <div className=\"chat__details\">\r\n            <h2>{name}</h2>\r\n            <p>{message}</p>\r\n        </div>\r\n    <p className=\"chat__timestamp\">{timestamp}</p>\r\n    </div>\r\n    </Link>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React from 'react'\r\nimport Chat from \"./Chat\";\r\n\r\nfunction Chats() {\r\n    return <div className = \"chats\">\r\n        <Chat\r\n    name = \"Adonis\"\r\n    message = \"Whoof!\"\r\n    timestamp = \"40 seconds ago\"\r\n    profilePic = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR4X0fwAtbfiSwRvN3-Fk1pE1rKMsAgWjcpbA&usqp=CAU\" />\r\n        <Chat\r\n    name = \"Oscar\"\r\n    message = \"Get into my belly!\"\r\n    timestamp = \"59 seconds ago\"\r\n    profilePic = \"https://th.bing.com/th/id/OIP.aNRusPbrj4MVdqBtF9JcFQExDM?w=241&h=180&c=7&o=5&pid=1.7\" />\r\n        <Chat\r\n    name = \"Earl\"\r\n    message = \"I wonder when Dad is going to finish these steaks?\"\r\n    timestamp = \"40 seconds ago\"\r\n    profilePic = \"https://th.bing.com/th/id/OIP.3DyekykHbmVTqMGPosF7nQHaLH?w=115&h=180&c=7&o=5&pid=1.7\" />\r\n        </div>;\r\n}\r\n\r\nexport default Chats","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport \"./ChatScreen.css\";\r\n\r\nfunction ChatScreen() {\r\n    const [input, setInput] = useState('');\r\n    const [messages, setMessages] = useState([\r\n        {\r\n            name: 'Ellen',\r\n            image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8R5QMsisJIZAYqBsahbU19T4QAyAE4moOPg&usqp=CAU',\r\n            message: 'Whats up'\r\n        },\r\n        {\r\n            name: 'Ellen',\r\n            image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8R5QMsisJIZAYqBsahbU19T4QAyAE4moOPg&usqp=CAU',\r\n            message: 'Hows it going'\r\n        },\r\n        {\r\n            message: 'Hows it going!',\r\n        },\r\n    ]);\r\n\r\n    const handleSend = e => {\r\n        e.preventDefault();\r\ndebugger;\r\n        setMessages ([...messages, { message: input }]);\r\n        setInput(\"\"); \r\n    }\r\n\r\n    return (\r\n        <div className=\"chatScreen\">\r\n            <p className=\"chatScreen__timestamp\">\r\n                You Matched with Ellen on 06/12/21\r\n            </p>\r\n            {messages.map((message) => (\r\n                message.name ? (\r\n                    <div className=\"chatScreen__message\">\r\n                        <Avatar\r\n                            className=\"chatScreen__image\"\r\n                            alt={message.name}\r\n                            src={message.image}\r\n                    />\r\n                    <p className=\"chatScreen__text\">{message.message}</p>\r\n                </div>\r\n                ) : (\r\n                    <div className=\"chatScreen__message\">\r\n                        <p className=\"chatScreen__textUser\">{message.message}</p>\r\n                    </div>\r\n                )\r\n            ))}\r\n\r\n            <div>\r\n                <form className=\"chatScreen__input\">\r\n                    <input\r\n                    value={input}\r\n                    onChange={e => setInput(e.target.value)}\r\n                    className=\"chatScreen__inputField\"\r\n                    type=\"text\"  \r\n                    placeholder=\"Type a message...\" \r\n                    />\r\n                    <button onClick={handleSend} type=\"submit\" className=\"chatScreen__inputButton\">SEND</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatScreen;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://barkster.herokuapp.com/',\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport \"./SwipeButtons.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nfunction SwipeButtons( { redHeartPressed, greenHeartPressed } ) {\r\n\r\n    return (\r\n        <div className =\"swipeButtons\">\r\n            <div className=\"redHeartPressed\">\r\n                    <IconButton \r\n                        onClick={() => redHeartPressed()}\r\n                        className=\"swipeButtons__left\">\r\n                            <CloseIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n            </div>\r\n            <div className=\"greenHeartPressed\">\r\n                    <IconButton \r\n                        onClick={() => greenHeartPressed()}\r\n                        className=\"swipeButtons__right\">\r\n                            <FavoriteIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n            </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default SwipeButtons;","import React, { useState, useEffect } from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport \"./BarkerCards.css\";\r\nimport axios from './axios';\r\nimport SwipeButtons from \"./SwipeButtons\";\r\n\r\nlet alreadyRemoved = [];\r\n\r\nfunction BarkerCards() {\r\nconst [people, setPeople] = useState([]); \r\n\r\n\r\nuseEffect(() => {\r\n    \r\n    async function fetchData() {\r\n        const req = await axios.get(\"/barker/cards\");\r\n\r\n        setPeople(req.data);\r\n    }\r\n\r\n    if (people?.length === 0) {\r\n        alreadyRemoved = [];\r\n        fetchData();\r\n    }\r\n\r\n})\r\n\r\nconst redHeartPressed = () => {\r\n    if (people && people.length > 0) {\r\n        const name = people[people.length - 1].name\r\n        swiped('left', name );\r\n        outOfFrame( name ); \r\n    }\r\n}\r\n\r\nconst greenHeartPressed = () => {\r\n    if (people && people.length > 0) {\r\n        const name = people[people.length - 1].name\r\n        swiped('right', name );\r\n        outOfFrame( name );\r\n    }\r\n}\r\n\r\nconst swiped = (direction, name) => {\r\n    console.log(\"removing: \" + name);\r\n    alreadyRemoved.push(name);\r\n    let clonedPeople = people.filter(person => !alreadyRemoved.includes(person.name));\r\n   \r\n    console.log('Handle swiped dog', name);\r\n    setPeople(clonedPeople);\r\n\r\n};\r\n\r\nconst outOfFrame = (name) => {\r\n\r\n    console.log(name + \" left the screen!\");\r\n   \r\n};\r\n\r\n    return (\r\n        <div className=\"barkerCards\">\r\n            <div className=\"barkerCards__cardContainer\">\r\n                {people.map((person) => (\r\n                 <TinderCard \r\n                 className=\"swipe\"\r\n                 key={person.name}\r\n                 preventSwipe={[\"up\", \"down\"]}\r\n                 onSwipe={(dir) => swiped(dir, person.name)}\r\n                 onCardLeftScreen={() => outOfFrame(person.name)}>\r\n                     <div\r\n                         style={{ backgroundImage: `url(${person.imgUrl})` }}\r\n                         className=\"card\">\r\n                            <h3>{person.name}</h3>\r\n                     </div>\r\n                 </TinderCard>\r\n            ))}\r\n            </div>\r\n           \r\n            <SwipeButtons redHeartPressed={redHeartPressed} \r\n            greenHeartPressed ={greenHeartPressed} \r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default BarkerCards\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Chats from \"./Chats\";\r\nimport ChatScreen from \"./ChatScreen\";\r\nimport BarkerCards from \"./BarkerCards\";\r\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  \r\n      return (\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/chat/:person\">\r\n              <Header backButton=\"/chat\" />\r\n              <ChatScreen />\r\n            </Route>\r\n            <Route path=\"/chat\">\r\n              <Header backButton=\"/\" />\r\n              <Chats />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Header />\r\n              <BarkerCards backButton=\"/\"/>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      );\r\n  }\r\n  \r\n  export default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}